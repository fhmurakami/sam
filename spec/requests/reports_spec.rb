require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/reports", type: :request do
  # This should return the minimal set of attributes required to create a valid
  # Report. As you add validations to Report, be sure to
  # adjust the attributes here as well.
  let(:user_admin) { create(:user_admin) }
  let(:valid_attributes) {
    {
      user_admin: user_admin,
      collection: create(:collection),
      grouping: create(:grouping)
    }
  }

  let(:invalid_attributes) {
    {
      user_admin: nil,
      collection: nil,
      grouping: nil
    }
  }

  describe "GET /index" do
    it "renders a successful response" do
      sign_in user_admin
      Report.create! valid_attributes
      get reports_url
      expect(response).to be_successful
    end
  end

  describe "GET /show" do
    context "with valid parameters" do
      it "renders a successful response" do
        report = Report.create! valid_attributes
        get report_url(report, locale: I18n.locale)
        expect(response).to be_successful
      end
    end

    context "with invalid parameters" do
      it "redirects to index page" do
        sign_in user_admin
        invalid_report_id = -1
        get report_url(invalid_report_id, locale: I18n.locale)
        expect(response.body).to match(I18n.t("reports.errors.not_found"))
      end
    end
  end

  describe "DELETE /destroy" do
    it "destroys the requested report" do
      report = Report.create! valid_attributes
      expect {
        delete report_url(report, locale: I18n.locale)
      }.to change(Report, :count).by(-1)
    end

    it "redirects to the reports list" do
      report = Report.create! valid_attributes
      delete report_url(report, locale: I18n.locale)
      expect(response).to redirect_to(reports_url)
    end
  end
end
